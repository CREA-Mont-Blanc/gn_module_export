swagger: "2.0"
info:
  version: "1.0.0"
  title: "Occurences de taxon - SINP"
  description: "Export de JDD d'occurences format SINP"
  termsOfService: http://example.com/terms/
  contact:
    name: API Support
    url: https://github.com/PnX-SI/
    email: geonature@ecrins-parcnational.fr
  license:
    name: GNU General Public License v3.0
    url: https://raw.githubusercontent.com/PnX-SI/GeoNature/master/LICENSE
servers:
  # FIXME: API_ENDPOINT + api_url
  - url: http://{api_endpoint}/{api_url}/
    description: Development server
    variables:
      api_endpoint: localhost:8000
      api_url: exports
  # - url: http://{api_endpoint}/{api_url}/
  #   description: Demo server
  #   variables:
  #     api_endpoint: demo.geonature.fr/geonature/api
  #     api_url: exports
schemes:
  - "http"
securityDefinitions:
  # Bearer:
  #   name: token
  #   type: apiKey
  #   scheme: bearer
  #   bearerFormat: JWT
  #   in: header
  #   description: |
  #    For accessing the API a valid JWT token must be passed in all the queries in
  #    the 'Authorization' header.
  #
  #
  #    A valid JWT token is generated by the API and returned as answer of a call
  #    to the route /login given a valid user & password.
  #
  #
  #    The following syntax must be used in the 'Authorization' header :
  #
  #     Bearer xxxxxx.yyyyyyy.zzzzzz
  # geonature_auth:
  #   type: "oauth2"
  #   tokenUrl: "http://localhost:4200/#/login"
  #   flow: "password"
  #   scopes:
  #     read:exports: "read your exports"
  api_key:
    type: apiKey
    name: token
    in: cookie

produces:
  - "application/json"
  - "application/csv"
  - "application/zip"
consumes:
  - "application/json"
components:
schemas:
  Export:
    type: object
    properties:
      id:
        type: integer
        minimum: 1
      label:
        type: string
      schema_name:
        type: string
      view_name:
        type: string
    required:
      - id
paths:
  # FIXME: api_url
  /exports/:
    get:
      description: Returns all exports from the system that the user has access to
      responses:
        '200':
          description: A list of exports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/export'
        '404':
          description: "No configured exports"
        '400':
          description: "Unexpected usage"
        '403':
          description: "Unauthenticated"
  /exports/{id}/{format}:
    get:
      description: Returns the format-specified data from the export the user has access to
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The export ID
          required: true
          type: integer
        - name: format
          in: path
          description: |
            The data format:
              - json: w/o geographic information
              - csv: w/o geographic information
              - shp: with geographic information
          enum:
            - json
            - csv
            - shp
          required: true
          type: string
      responses:
        '200':
          description: A file
          content:
            'application/json': {}
            'text/csv': {}
            'application/zip': {}
        '404':
          description: "No configured exports"
        '400':
          description: "Unexpected usage"
        '403':
          description: "Unauthenticated"
externalDocs:
  description: "Find out more about GÃ©oNature"
  url: "http://geonature.fr"
